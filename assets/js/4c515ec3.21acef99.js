"use strict";(self.webpackChunknodearch_website=self.webpackChunknodearch_website||[]).push([[3842],{1740:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started/project-structure","title":"Project Structure","description":"A well-organized project structure is essential for building scalable and maintainable NodeArch applications. This section explains the typical layout of a NodeArch project, the purpose of each directory and file, and best practices for structuring your codebase.","source":"@site/docs/getting-started/project-structure.md","sourceDirName":"getting-started","slug":"/getting-started/project-structure","permalink":"/docs/getting-started/project-structure","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Installation","permalink":"/docs/getting-started/installation"},"next":{"title":"Hello World","permalink":"/docs/getting-started/hello-world"}}');var s=t(4848),i=t(8453);const o={},c="Project Structure",a={},l=[{value:"Typical Project Layout",id:"typical-project-layout",level:2},{value:"Key Directories and Files",id:"key-directories-and-files",level:3},{value:"The Components Folder",id:"the-components-folder",level:2},{value:"Example: Feature-Based Organization",id:"example-feature-based-organization",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,s.jsx)(n.p,{children:"A well-organized project structure is essential for building scalable and maintainable NodeArch applications. This section explains the typical layout of a NodeArch project, the purpose of each directory and file, and best practices for structuring your codebase."}),"\n",(0,s.jsx)(n.h2,{id:"typical-project-layout",children:"Typical Project Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"your-app/\n\u251c\u2500\u2500 public/\n\u2502   \u2514\u2500\u2500 docs/\n\u2502       \u2514\u2500\u2500 openapi.json\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main.ts\n\u2502   \u2514\u2500\u2500 components/\n\u2502       \u251c\u2500\u2500 user.controller.ts\n\u2502       \u251c\u2500\u2500 user.service.ts\n\u2502       \u251c\u2500\u2500 user.repository.ts\n\u2502       \u251c\u2500\u2500 user.interface.ts\n\u2502       \u251c\u2500\u2500 user-inputs.validation.ts\n\u2502       \u251c\u2500\u2500 user.middleware.ts\n\u2502       \u2514\u2500\u2500 user.test.ts\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 nodearch\n"})}),"\n",(0,s.jsx)(n.h3,{id:"key-directories-and-files",children:"Key Directories and Files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"public/"}),": Static files served by your app. The ",(0,s.jsx)(n.code,{children:"docs/"})," subfolder contains the generated OpenAPI (Swagger) documentation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"src/"}),": Main source code for your application.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"main.ts"}),": The entry point that bootstraps your NodeArch app."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"components/"}),": Contains all your business logic, organized by feature (controllers, services, repositories, interfaces, validation, middleware, and tests)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"package.json"}),": Project metadata and dependencies."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"tsconfig.json"}),": TypeScript configuration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"nodearch"}),": NodeArch configuration file for app metadata and settings."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"the-components-folder",children:"The Components Folder"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"components/"})," directory is the heart of your application. It is typically organized by feature or domain, and contains:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Controllers"}),": Define HTTP endpoints and handle incoming requests (When using express)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Services"}),": Contain business logic and orchestrate data flow."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Repositories"}),": Manage data access and persistence."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Interfaces"}),": Define TypeScript interfaces for type safety."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validation"}),": Centralize input validation schemas (e.g., Joi)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Middleware"}),": Implement cross-cutting concerns (e.g., authentication, logging)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tests"}),": Unit and integration tests for your features."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-feature-based-organization",children:"Example: Feature-Based Organization"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/components/\n\u251c\u2500\u2500 user/\n\u2502   \u251c\u2500\u2500 user.controller.ts\n\u2502   \u251c\u2500\u2500 user.service.ts\n\u2502   \u251c\u2500\u2500 user.repository.ts\n\u2502   \u251c\u2500\u2500 user.interface.ts\n\u2502   \u251c\u2500\u2500 user-inputs.validation.ts\n\u2502   \u251c\u2500\u2500 user.middleware.ts\n\u2502   \u2514\u2500\u2500 user.test.ts\n\u251c\u2500\u2500 product/\n\u2502   \u251c\u2500\u2500 product.controller.ts\n\u2502   \u251c\u2500\u2500 product.service.ts\n\u2502   \u2514\u2500\u2500 ...\n"})}),"\n",(0,s.jsx)(n.p,{children:"Organizing by feature keeps related files together, making it easier to scale and maintain your codebase as your application grows."}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Keep features isolated"}),": Group related files by feature/domain."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use dependency injection"}),": Leverage NodeArch's DI to keep code modular and testable."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Document your API"}),": Use OpenAPI decorators and generate docs for easy API exploration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Write tests"}),": Place tests alongside the code they cover for clarity."]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"A clear project structure is the foundation for productivity and maintainability in NodeArch projects."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);