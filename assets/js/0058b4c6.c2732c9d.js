"use strict";(self.webpackChunknodearch_website=self.webpackChunknodearch_website||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"What is NodeArch?","href":"/docs/introduction/what-is-nodearch","docId":"introduction/what-is-nodearch","unlisted":false},{"type":"link","label":"Why NodeArch?","href":"/docs/introduction/why-nodearch","docId":"introduction/why-nodearch","unlisted":false},{"type":"link","label":"Key Features","href":"/docs/introduction/key-features","docId":"introduction/key-features","unlisted":false},{"type":"link","label":"Design Principles","href":"/docs/introduction/philosophy-design-principles","docId":"introduction/philosophy-design-principles","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Project Structure","href":"/docs/getting-started/project-structure","docId":"getting-started/project-structure","unlisted":false},{"type":"link","label":"Hello World","href":"/docs/getting-started/hello-world","docId":"getting-started/hello-world","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Core Concepts","items":[{"type":"link","label":"Lifecycle","href":"/docs/core-concepts/lifecycle","docId":"core-concepts/lifecycle","unlisted":false},{"type":"link","label":"App","href":"/docs/core-concepts/app","docId":"core-concepts/app","unlisted":false},{"type":"link","label":"Extensions","href":"/docs/core-concepts/extensions","docId":"core-concepts/extensions","unlisted":false},{"type":"category","label":"Components","items":[{"type":"link","label":"Hooks","href":"/docs/core-concepts/components/hooks","docId":"core-concepts/components/hooks","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}]},"docs":{"advanced/advanced-di":{"id":"advanced/advanced-di","title":"Advanced DI Techniques","description":""},"advanced/aop-extensions":{"id":"advanced/aop-extensions","title":"AOP-style Extensions","description":""},"advanced/custom-decorators":{"id":"advanced/custom-decorators","title":"Custom Decorators","description":""},"advanced/extending-cli":{"id":"advanced/extending-cli","title":"Extending the CLI","description":""},"advanced/module-composition":{"id":"advanced/module-composition","title":"Module Composition","description":""},"advanced/testing":{"id":"advanced/testing","title":"Testing Strategies","description":""},"api-reference/cli":{"id":"api-reference/cli","title":"CLI Commands","description":""},"api-reference/configuration":{"id":"api-reference/configuration","title":"Configuration Options","description":""},"api-reference/core-types":{"id":"api-reference/core-types","title":"Core Types","description":""},"api-reference/decorators":{"id":"api-reference/decorators","title":"Decorators","description":""},"api-reference/lifecycle-hooks":{"id":"api-reference/lifecycle-hooks","title":"Lifecycle Hooks","description":""},"architecture/architecture-overview":{"id":"architecture/architecture-overview","title":"Architecture Overview","description":""},"best-practices/debugging":{"id":"best-practices/debugging","title":"Debugging","description":""},"best-practices/performance":{"id":"best-practices/performance","title":"Performance Tips","description":""},"best-practices/security":{"id":"best-practices/security","title":"Security Practices","description":""},"best-practices/structuring-apps":{"id":"best-practices/structuring-apps","title":"Structuring Large Apps","description":""},"best-practices/third-party-libs":{"id":"best-practices/third-party-libs","title":"Working with Third-party Libraries","description":""},"changelog":{"id":"changelog","title":"Changelog","description":""},"contributing/how-to-contribute":{"id":"contributing/how-to-contribute","title":"How to Contribute","description":""},"contributing/issue-templates":{"id":"contributing/issue-templates","title":"Issue Templates","description":""},"contributing/local-setup":{"id":"contributing/local-setup","title":"Local Setup","description":""},"contributing/pr-guidelines":{"id":"contributing/pr-guidelines","title":"PR Guidelines","description":""},"contributing/style-guide":{"id":"contributing/style-guide","title":"Coding Style Guide","description":""},"core-concepts/app":{"id":"core-concepts/app","title":"App","description":"The App class is the main entry point for any NodeArch application. It provides the foundation for configuring your app, loading components, and integrating extensions. Below is an example of how to define your own app by extending the App class and configuring its options.","sidebar":"docs"},"core-concepts/components/hooks":{"id":"core-concepts/components/hooks","title":"Hooks","description":"Hooks in NodeArch allow you to execute code when the application starts and when it shuts down.","sidebar":"docs"},"core-concepts/configuration":{"id":"core-concepts/configuration","title":"Configuration System","description":""},"core-concepts/dependency-injection":{"id":"core-concepts/dependency-injection","title":"Dependency Injection","description":""},"core-concepts/extensions":{"id":"core-concepts/extensions","title":"Extensions","description":"Extensions in NodeArch are modular packages or apps that add new features, capabilities, or integrations to your main application. They allow you to compose your app from reusable building blocks, making it easy to add support for things like HTTP servers, validation, OpenAPI, authentication, testing, and more.","sidebar":"docs"},"core-concepts/hooks-lifecycle":{"id":"core-concepts/hooks-lifecycle","title":"Hooks and Lifecycle Events","description":""},"core-concepts/lifecycle":{"id":"core-concepts/lifecycle","title":"Lifecycle","description":"NodeArch applications follow a well-defined lifecycle that ensures your app and its extensions are loaded, initialized, and started in a consistent and extensible way. This document explains what happens when you run nodearch start and how the framework manages your app\'s lifecycle.","sidebar":"docs"},"core-concepts/modules":{"id":"core-concepts/modules","title":"Modules","description":""},"core-concepts/providers-services":{"id":"core-concepts/providers-services","title":"Providers & Services","description":""},"developer/vscode-extension":{"id":"developer/vscode-extension","title":"VsCode Extension","description":""},"extensions/express":{"id":"extensions/express","title":"Express","description":""},"extensions/socket-io":{"id":"extensions/socket-io","title":"Socket IO","description":""},"faq/common-issues":{"id":"faq/common-issues","title":"Common Issues & Errors","description":""},"faq/migrate-from-express":{"id":"faq/migrate-from-express","title":"How to migrate from Express?","description":""},"faq/vs-nestjs":{"id":"faq/vs-nestjs","title":"How is this different from NestJS?","description":""},"getting-started/hello-world":{"id":"getting-started/hello-world","title":"Hello World","description":"Before you start, make sure you have completed the installation steps for NodeArch and have the CLI ready to use.","sidebar":"docs"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Getting started with NodeArch is simple. With just a few steps, you\u2019ll have everything you need to build structured, scalable, and maintainable Node.js applications.","sidebar":"docs"},"getting-started/project-structure":{"id":"getting-started/project-structure","title":"Project Structure","description":"A well-organized project structure is essential for building scalable and maintainable NodeArch applications. This section explains the typical layout of a NodeArch project, the purpose of each directory and file, and best practices for structuring your codebase.","sidebar":"docs"},"getting-started/quick-tour":{"id":"getting-started/quick-tour","title":"Quick Tour","description":""},"guide/controllers":{"id":"guide/controllers","title":"Creating Controllers","description":""},"guide/decorators":{"id":"guide/decorators","title":"Using Decorators","description":""},"guide/environment-config":{"id":"guide/environment-config","title":"Environment Configuration","description":""},"guide/error-handling":{"id":"guide/error-handling","title":"Error Handling","description":""},"guide/hooks":{"id":"guide/hooks","title":"Creating Hooks","description":""},"guide/logging":{"id":"guide/logging","title":"Logging","description":""},"guide/middleware":{"id":"guide/middleware","title":"Adding Middleware","description":""},"guide/routing":{"id":"guide/routing","title":"Routing","description":""},"guide/services":{"id":"guide/services","title":"Creating Services","description":""},"introduction/key-features":{"id":"introduction/key-features","title":"Key Features","description":"NodeArch brings a fresh, modular, and scalable approach to backend development in Node.js. It blends the best of TypeScript, Express, and enterprise software principles into a cohesive framework \u2014 perfect for building robust applications.","sidebar":"docs"},"introduction/philosophy-design-principles":{"id":"introduction/philosophy-design-principles","title":"Design Principles","description":"NodeArch was built with a clear mission: to make backend development in Node.js structured, maintainable, and scalable \u2014 without sacrificing the flexibility developers love.","sidebar":"docs"},"introduction/what-is-nodearch":{"id":"introduction/what-is-nodearch","title":"What is NodeArch?","description":"NodeArch is a modern, lightly opinionated Node.js backend framework that helps developers build scalable and maintainable server-side applications using the architectural patterns and design philosophies found in enterprise-level platforms like Java Spring and .NET.","sidebar":"docs"},"introduction/why-nodearch":{"id":"introduction/why-nodearch","title":"Why NodeArch?","description":"NodeArch was built to solve a fundamental problem in the Node.js ecosystem: as applications grow in size and complexity, they often become difficult to structure, test, and maintain. NodeArch provides a clear architectural approach and a suite of developer tools to build modular, scalable, and maintainable backend applications with ease.","sidebar":"docs"},"plugins/example-plugin":{"id":"plugins/example-plugin","title":"Example: Plugin for Tracing or Rate Limiting","description":""},"plugins/sharing":{"id":"plugins/sharing","title":"Sharing with the Community","description":""},"plugins/writing-plugin":{"id":"plugins/writing-plugin","title":"Writing a Plugin","description":""},"recipes/auth-jwt":{"id":"recipes/auth-jwt","title":"Auth with JWT","description":""},"recipes/caching-redis":{"id":"recipes/caching-redis","title":"Caching with Redis","description":""},"recipes/cron-jobs":{"id":"recipes/cron-jobs","title":"Cron Jobs","description":""},"recipes/database-repos":{"id":"recipes/database-repos","title":"MongoDB/PostgreSQL with Repositories","description":""},"recipes/file-uploads":{"id":"recipes/file-uploads","title":"File Uploads","description":""},"recipes/multi-tenant":{"id":"recipes/multi-tenant","title":"Multi-tenant Setup","description":""},"roadmap":{"id":"roadmap","title":"Roadmap","description":""}}}}')}}]);